/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationmedecin;

import EJB.EJBAnalysesRemote;
import entities.Demande;
import java.util.Calendar;
import java.util.Date;
import javax.ejb.EJB;
import javax.swing.JOptionPane;

/**
 *
 * @author tibha
 */
public class DemandeAnalyse extends javax.swing.JDialog {

    @EJB
    private static EJBAnalysesRemote eJBAnalyses;
    private int idMedecin;
    private int idPatient;

    /**
     * Creates new form DemandeAnalyse
     */
    public DemandeAnalyse(java.awt.Frame parent, boolean modal,EJBAnalysesRemote eJB) {
        super(parent, modal);
        eJBAnalyses = eJB;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxLeucocytes = new javax.swing.JCheckBox();
        jCheckBoxHematies = new javax.swing.JCheckBox();
        jCheckBoxHemoglobine = new javax.swing.JCheckBox();
        jCheckBoxHematocrite = new javax.swing.JCheckBox();
        jCheckBoxVGM = new javax.swing.JCheckBox();
        jCheckBoxCCMH = new javax.swing.JCheckBox();
        jCheckBoxTCMH = new javax.swing.JCheckBox();
        jCheckBoxRDW = new javax.swing.JCheckBox();
        jButtonDemande = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jCheckBoxUrgent = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jCheckBoxLeucocytes.setText("Leucocytes");

        jCheckBoxHematies.setText("Hématies");

        jCheckBoxHemoglobine.setText("Hémaglobine");

        jCheckBoxHematocrite.setText("Hématocrite");

        jCheckBoxVGM.setText("V.G.M");

        jCheckBoxCCMH.setText("C.C.M.H");

        jCheckBoxTCMH.setText("T.C.M.H");

        jCheckBoxRDW.setText("RDW");

        jButtonDemande.setText("Envoyer La demande");
        jButtonDemande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDemandeActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Demande d'analyse");

        jCheckBoxUrgent.setText("Urgent");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxUrgent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(jButtonDemande)
                        .addGap(61, 61, 61))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxLeucocytes)
                            .addComponent(jCheckBoxHematocrite)
                            .addComponent(jCheckBoxHemoglobine)
                            .addComponent(jCheckBoxHematies))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxRDW)
                            .addComponent(jCheckBoxTCMH)
                            .addComponent(jCheckBoxCCMH)
                            .addComponent(jCheckBoxVGM))
                        .addGap(90, 90, 90))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jCheckBoxVGM)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxCCMH)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxTCMH)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxRDW))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBoxLeucocytes)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxHematies)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxHemoglobine)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxHematocrite)))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDemande)
                    .addComponent(jCheckBoxUrgent))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDemandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDemandeActionPerformed
        // TODO add your handling code here:
        boolean selected = false;
        String demande="";    
        if(jCheckBoxLeucocytes.isSelected())
        {
            demande = demande + "Leucocytes@";
            selected = true;
        }
        if(jCheckBoxCCMH.isSelected())
        {    demande = demande + "CCMH@";selected = true;}
        if(jCheckBoxHematies.isSelected())
        {    demande = demande + "Hematies@";selected = true;}
        if(jCheckBoxHematocrite.isSelected())
        {    demande = demande + "Hematocrite@";selected = true;}
        if(jCheckBoxHemoglobine.isSelected())
        {    demande = demande + "Hemoglobine@";selected = true;}
        if(jCheckBoxRDW.isSelected())
        {    demande = demande + "RDW@";selected = true;}
        if(jCheckBoxTCMH.isSelected())
        {    demande = demande + "TCMH@";selected = true;}
        if(jCheckBoxVGM.isSelected())
        {    demande = demande + "VGM@";selected = true;}
        
        Demande d = new Demande();
        d.setRefMedecin(idMedecin);
        d.setRefPatient(idPatient);
        if(jCheckBoxUrgent.isSelected())
        {
            d.setUrgent((short)1);            
            demande = demande + "URGENT";
        } 
        else
        {
            d.setUrgent((short)0);
        }

        Calendar myCalendar = Calendar.getInstance();
        Date myDate = myCalendar.getTime();
        d.setDateHeureDemande(myDate);
        if(selected)
        {
            int id = eJBAnalyses.AddAnalyse(d);
            eJBAnalyses.sendMessageQueue(id + "@@" + demande);
            JOptionPane.showMessageDialog(this, "Voici le numéro de analyse" + id, "Numéro d'analyse", JOptionPane.INFORMATION_MESSAGE);
            this.setVisible(false);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Veuillez selectionner au moins un champs a analyser !", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonDemandeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DemandeAnalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DemandeAnalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DemandeAnalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DemandeAnalyse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DemandeAnalyse dialog = new DemandeAnalyse(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDemande;
    private javax.swing.JCheckBox jCheckBoxCCMH;
    private javax.swing.JCheckBox jCheckBoxHematies;
    private javax.swing.JCheckBox jCheckBoxHematocrite;
    private javax.swing.JCheckBox jCheckBoxHemoglobine;
    private javax.swing.JCheckBox jCheckBoxLeucocytes;
    private javax.swing.JCheckBox jCheckBoxRDW;
    private javax.swing.JCheckBox jCheckBoxTCMH;
    private javax.swing.JCheckBox jCheckBoxUrgent;
    private javax.swing.JCheckBox jCheckBoxVGM;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the idMedecin
     */
    public int getIdMedecin() {
        return idMedecin;
    }

    /**
     * @param idMedecin the idMedecin to set
     */
    public void setIdMedecin(int idMedecin) {
        this.idMedecin = idMedecin;
    }

    /**
     * @return the idPatient
     */
    public int getIdPatient() {
        return idPatient;
    }

    /**
     * @param idPatient the idPatient to set
     */
    public void setIdPatient(int idPatient) {
        this.idPatient = idPatient;
    }
}
