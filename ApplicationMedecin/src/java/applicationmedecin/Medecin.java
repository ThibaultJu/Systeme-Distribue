/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package applicationmedecin;

import EJB.EJBAnalysesRemote;
import EJB.EJBPatientRemote;
import entities.Patient;
import static java.lang.System.exit;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.annotation.Resource;
import javax.ejb.EJB;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.jms.Topic;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tibha
 */
public class Medecin extends javax.swing.JFrame implements MessageListener {

    @Resource(mappedName = "jms/myTopic")
    private static Topic myTopic;

    @Resource(mappedName = "jms/myTopicFactory")
    private static ConnectionFactory myTopicFactory;

    @EJB
    protected static EJBPatientRemote eJBPatient;

    @EJB
    private static EJBAnalysesRemote eJBAnalyses;

    /**
     * Creates new form Medecin
     */
    
    private static Connection connection = null;
    private static Session session = null;
    private static MessageConsumer consumer;
    protected AjoutPatient guiPatient;
    public Medecin() {
        try {
            initComponents();
            
            connection = myTopicFactory.createConnection();
            session = connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
            connection.start();
            consumer = session.createConsumer(myTopic);
            guiPatient = new AjoutPatient(this,true,eJBPatient);
            consumer.setMessageListener(this);
            if(eJBPatient.CheckIdMedecin())
                System.out.println("Connexion OK");
            else
            {
                exit(0);
            }            
            System.out.println(eJBPatient.sayHello("Jean-claude Van Damme"));
            System.out.println(eJBAnalyses.sayHello("Jean-claude Van Damme"));
            System.out.println("Patient : " + eJBPatient.getPatient(2));
            DefaultTableModel dlm = (DefaultTableModel)jTablePatient.getModel();
            Vector<Patient> ListPatient =eJBPatient.LoadPatients();
            for(int i=0 ; i < ListPatient.size();i++)
            {
                Patient p = ListPatient.get(i);
                Vector tmp = new Vector();
                tmp.add(p.getIdPatient());
                tmp.add(p.getNom());
                tmp.add(p.getPrenom());
                tmp.add(p.getLogin());
                dlm.addRow(tmp);
            }
        } catch (JMSException ex) {
            Logger.getLogger(Medecin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelPatient = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePatient = new javax.swing.JTable();
        jButtonAddPatient = new javax.swing.JButton();
        jButtonUpdatePatient = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelPatient.setText("Liste des patients");

        jTablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Identifiant", "Nom", "Prenom", "Login"
            }
        ));
        jScrollPane2.setViewportView(jTablePatient);

        jButtonAddPatient.setText("Ajouter un Patient");
        jButtonAddPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPatientActionPerformed(evt);
            }
        });

        jButtonUpdatePatient.setText("Mise à jour du patient");
        jButtonUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdatePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPatient)
                        .addGap(36, 36, 36)
                        .addComponent(jButtonAddPatient)
                        .addGap(45, 45, 45)
                        .addComponent(jButtonUpdatePatient))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(839, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAddPatient)
                            .addComponent(jLabelPatient))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonUpdatePatient)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPatientActionPerformed
        // TODO add your handling code here:
        guiPatient.setVisible(true);        
    }//GEN-LAST:event_jButtonAddPatientActionPerformed

    private void jButtonUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdatePatientActionPerformed
        // TODO add your handling code here:
        
                
    }//GEN-LAST:event_jButtonUpdatePatientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medecin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medecin().setVisible(true);
            }
        });
    }
    @Override
    public void onMessage(Message message) {
        try
        {
            TextMessage tm = (TextMessage)message;
            
            System.out.println("Message = " + tm.getText());
        } catch (JMSException ex) {
            Logger.getLogger(Medecin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddPatient;
    private javax.swing.JButton jButtonUpdatePatient;
    private javax.swing.JLabel jLabelPatient;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePatient;
    // End of variables declaration//GEN-END:variables
}
